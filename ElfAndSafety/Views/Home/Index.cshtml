@model IEnumerable<ElfAndSafety.Models.User>
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h2">User Management</h1>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUserModal">
                    <i class="fas fa-plus"></i> Create New User
                </button>
            </div>

            <!-- Filter Section -->
            <div class="card mb-4">
                    <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-4">
                            <label for="showDeleted" class="form-label">Filter Users</label>
                            <select class="form-select" id="showDeleted" name="showDeleted" onchange="this.form.submit()">
                                <option value="">All Users</option>
                                <option value="false" selected="@(ViewBag.ShowDeleted == false)">Active Users</option>
                                <option value="true" selected="@(ViewBag.ShowDeleted == true)">Deleted Users</option>
                            </select>
                            <input type="hidden" name="sortBy" value="@(ViewBag.SortBy ?? "")" />
                            <input type="hidden" name="sortDir" value="@(ViewBag.SortDir ?? "")" />
                        </div>
                    </form>
                </div>
            </div>

            <!-- Users Table -->
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>@Html.ActionLink("First Name", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "FirstName", sortDir = (ViewBag.SortBy == "FirstName" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>@Html.ActionLink("Surname", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "Surname", sortDir = (ViewBag.SortBy == "Surname" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>@Html.ActionLink("Email Address", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "EmailAddress", sortDir = (ViewBag.SortBy == "EmailAddress" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>@Html.ActionLink("Username", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "Username", sortDir = (ViewBag.SortBy == "Username" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>Status</th>
                                    <th>@Html.ActionLink("Date Created", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "DateCreated", sortDir = (ViewBag.SortBy == "DateCreated" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>@Html.ActionLink("Last Modified", "Index", new { showDeleted = ViewBag.ShowDeleted, sortBy = "DateLastModified", sortDir = (ViewBag.SortBy == "DateLastModified" && ViewBag.SortDir == "asc") ? "desc" : "asc" })</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr id="user-row-@user.Id" class="@(user.Deleted ? "table-danger" : "")">
                                        <td>@user.FirstName</td>
                                        <td>@user.Surname</td>
                                        <td>@user.EmailAddress</td>
                                        <td>@user.Username</td>
                                        <td>
                                            @if (user.Deleted)
                                            {
                                                <span class="badge bg-danger">Deleted</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                        </td>
                                        <td>@user.DateCreated.ToString("MMM dd, yyyy")</td>
                                        <td>@user.DateLastModified.ToString("MMM dd, yyyy")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                        onclick="editUser(@user.Id)" title="Edit User">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                @if (user.Deleted)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-success" 
                                                            onclick="restoreUser(@user.Id)" title="Restore User">
                                                        <i class="fas fa-undo"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger ms-1" 
                                                            onclick="permanentDeleteUser(@user.Id)" title="Permanently Delete User">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                                            onclick="deleteUser(@user.Id)" title="Delete User">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="createUserModalBody">
                <!-- Content will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="editUserModalBody">
                <!-- Content will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>

            <!-- Confirm Action Modal (Delete / Restore) -->
            <div class="modal fade" id="confirmActionModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-body" id="confirmActionModalBody">
                            <p id="confirmActionMessage"></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" id="confirmActionButton" class="btn btn-danger">Confirm</button>
                        </div>
                    </div>
                </div>
            </div>

@section Scripts {
    <script>
        // Load create user modal content
        $('#createUserModal').on('show.bs.modal', function () {
            $.get('@Url.Action("Create", "User")', function (data) {
                $('#createUserModalBody').html(data);
            });
        });

        // Load edit user modal content
        function editUser(userId) {
            $.get('@Url.Action("Edit", "User")', { id: userId }, function (data) {
                $('#editUserModalBody').html(data);
                $('#editUserModal').modal('show');
            });
        }

        // Submit create user form
        function submitCreateUser() {
            var form = $('#createUserForm');
            var formData = form.serialize();

            $.ajax({
                url: '@Url.Action("Create", "User")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        $('#createUserModal').modal('hide');
                        location.reload();
                    } else {
                        $('#createUserModalBody').html(response);
                    }
                },
                error: function () {
                    alert('An error occurred while creating the user.');
                }
            });
        }

        // Submit edit user form
        function submitEditUser() {
            var form = $('#editUserForm');
            var formData = form.serialize();

            $.ajax({
                url: '@Url.Action("Edit", "User")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        $('#editUserModal').modal('hide');
                        location.reload();
                    } else {
                        $('#editUserModalBody').html(response);
                    }
                },
                error: function () {
                    alert('An error occurred while updating the user.');
                }
            });
        }

        // Delete user - open confirm modal
        function deleteUser(userId) {
            $('#confirmActionMessage').text('Are you sure you want to delete this user?');
            $('#confirmActionButton').off('click').on('click', function () {
                // parameterized post
                $.ajax({
                    url: '@Url.Action("Delete", "User")',
                    type: 'POST',
                    data: { id: userId },
                    success: function (response) {
                        $('#confirmActionModal').modal('hide');
                        if (response.success) {
                            var row = $('#user-row-' + userId);
                            if (row.length) {
                                row.addClass('table-danger');
                                row.find('td:nth-child(5)').html('<span class="badge bg-danger">Deleted</span>');
                                var actionsCell = row.find('td:last');
                                actionsCell.find('.btn-group').html(
                                    '<button type="button" class="btn btn-sm btn-outline-success" onclick="restoreUser(' + userId + ')" title="Restore User"><i class="fas fa-undo"></i></button>'
                                );
                            } else {
                                location.reload();
                            }
                        } else {
                            // show error via alert for now
                            alert(response.message);
                        }
                    },
                    error: function () {
                        $('#confirmActionModal').modal('hide');
                        alert('An error occurred while deleting the user.');
                    }
                });
            });

            $('#confirmActionModal').modal('show');
        }

        // Restore user - open confirm modal
        function restoreUser(userId) {
            $('#confirmActionMessage').text('Are you sure you want to restore this user?');
            $('#confirmActionButton').off('click').on('click', function () {
                $.ajax({
                    url: '@Url.Action("Restore", "User")',
                    type: 'POST',
                    data: { id: userId },
                    success: function (response) {
                        $('#confirmActionModal').modal('hide');
                        if (response.success) {
                            var row = $('#user-row-' + userId);
                            if (row.length) {
                                row.removeClass('table-danger');
                                row.find('td:nth-child(5)').html('<span class="badge bg-success">Active</span>');
                                var actionsCell = row.find('td:last');
                                actionsCell.find('.btn-group').html(
                                    '<button type="button" class="btn btn-sm btn-outline-primary" onclick="editUser(' + userId + ')" title="Edit User"><i class="fas fa-edit"></i></button>' +
                                    '<button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteUser(' + userId + ')" title="Delete User"><i class="fas fa-trash"></i></button>'
                                );
                            } else {
                                location.reload();
                            }
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        $('#confirmActionModal').modal('hide');
                        alert('An error occurred while restoring the user.');
                    }
                });
            });

            $('#confirmActionModal').modal('show');
        }

        // Permanent delete (only shown for already deleted users)
        function permanentDeleteUser(userId) {
            $('#confirmActionMessage').text('This will permanently delete the user and cannot be undone. Are you sure?');
            $('#confirmActionButton').off('click').on('click', function () {
                $.ajax({
                    url: '@Url.Action("PermanentDelete", "User")',
                    type: 'POST',
                    data: { id: userId },
                    success: function (response) {
                        $('#confirmActionModal').modal('hide');
                        if (response.success) {
                            var row = $('#user-row-' + userId);
                            if (row.length) {
                                row.remove();
                            } else {
                                location.reload();
                            }
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        $('#confirmActionModal').modal('hide');
                        alert('An error occurred while permanently deleting the user.');
                    }
                });
            });

            $('#confirmActionModal').modal('show');
        }
    </script>
}
